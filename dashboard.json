{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 2,
  "id": 36,
  "links": [],
  "liveNow": true,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddp38pe3t92wwc"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 0,
        "y": 0
      },
      "id": 14,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^upsEIdentityUPSFirmwareVerison$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddp38pe3t92wwc"
          },
          "query": "from(bucket: \"ups\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ups_data\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"upsEIdentityUPSFirmwareVerison\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "UPS firmware",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddp38pe3t92wwc"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "1": {
                  "color": "dark-green",
                  "index": 0,
                  "text": "Power on"
                },
                "2": {
                  "color": "dark-green",
                  "index": 1,
                  "text": "Stand by"
                },
                "3": {
                  "color": "yellow",
                  "index": 2,
                  "text": "By pass"
                },
                "4": {
                  "color": "dark-green",
                  "index": 3,
                  "text": "Line"
                },
                "5": {
                  "color": "yellow",
                  "index": 4,
                  "text": "Battery"
                },
                "6": {
                  "color": "yellow",
                  "index": 5,
                  "text": "Battery test"
                },
                "7": {
                  "color": "dark-red",
                  "index": 6,
                  "text": "Fault"
                },
                "8": {
                  "color": "yellow",
                  "index": 7,
                  "text": "Converter"
                },
                "9": {
                  "color": "green",
                  "index": 8,
                  "text": "Eco"
                },
                "10": {
                  "color": "green",
                  "index": 9,
                  "text": "Shutdown"
                },
                "11": {
                  "color": "yellow",
                  "index": 10,
                  "text": "On booster"
                },
                "12": {
                  "color": "yellow",
                  "index": 11,
                  "text": "On reducer"
                },
                "13": {
                  "color": "super-light-blue",
                  "index": 12,
                  "text": "Other"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 3,
        "y": 0
      },
      "id": 20,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddp38pe3t92wwc"
          },
          "query": "from(bucket: \"ups\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ups_data\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"upsESystemStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "UPS Status",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddp38pe3t92wwc"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 8,
        "y": 0
      },
      "id": 13,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^upsEIdentityModel$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddp38pe3t92wwc"
          },
          "query": "from(bucket: \"ups\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ups_data\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"upsEIdentityModel\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "UPS Type",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddp38pe3t92wwc"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-red",
                "value": null
              },
              {
                "color": "dark-green",
                "value": 215
              },
              {
                "color": "dark-red",
                "value": 232
              }
            ]
          },
          "unit": "volt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 11,
        "y": 0
      },
      "id": 16,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^upsESystemInputVoltage$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddp38pe3t92wwc"
          },
          "query": "from(bucket: \"ups\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ups_data\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"upsEBatteryEstimatedChargeRemaining\" or r[\"_field\"] == \"upsEPositiveBatteryVoltage\" or r[\"_field\"] == \"upsESystemInputVoltage\" or r[\"_field\"] == \"upsESystemOutputLoad\" or r[\"_field\"] == \"upsESystemOutputVoltage\") \r\n  |> map(fn: (r) => ({\r\n      _time: r._time,\r\n      _value: \r\n        if r[\"_field\"] == \"upsESystemInputVoltage\" then float(v: r._value) / 10.0 \r\n        else float(v: r._value),\r\n      _field: r._field,\r\n      _measurement: r._measurement\r\n  }))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "A"
        }
      ],
      "title": "Input Volts",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddp38pe3t92wwc"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-green",
                "value": null
              }
            ]
          },
          "unit": "rothz"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 13,
        "y": 0
      },
      "id": 17,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^upsESystemOutputFrequency$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddp38pe3t92wwc"
          },
          "query": "from(bucket: \"ups\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ups_data\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"upsESystemOutputFrequency\" ) \r\n  |> map(fn: (r) => ({\r\n      _time: r._time,\r\n      _value: \r\n        if r[\"_field\"] == \"upsESystemOutputFrequency\" then float(v: r._value) / 10.0\r\n        else float(v: r._value),\r\n      _field: r._field,\r\n      _measurement: r._measurement\r\n  }))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "A"
        }
      ],
      "title": "Output Hz",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddp38pe3t92wwc"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "max": 41.2,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#d44a3a",
                "value": null
              },
              {
                "color": "#299c46",
                "value": 0
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 60
              },
              {
                "color": "dark-red",
                "value": 90
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 17,
        "y": 0
      },
      "id": 18,
      "maxDataPoints": 100,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^upsESystemOutputLoad$/",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "alias": "$col",
          "datasource": {
            "type": "influxdb",
            "uid": "ddp38pe3t92wwc"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "synoSystem",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"ups\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ups_data\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"upsESystemOutputLoad\" ) \r\n  |> map(fn: (r) => ({\r\n      _time: r._time,\r\n      _value: \r\n        if r[\"_field\"] == \"upsESystemOutputLoad\" then float(v: r._value) \r\n        else float(v: r._value),\r\n      _field: r._field,\r\n      _measurement: r._measurement\r\n  }))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "upsBatteryCharge"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "UPS Load",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddp38pe3t92wwc"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "max": 41.2,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#d44a3a",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 36
              },
              {
                "color": "#299c46",
                "value": 40
              }
            ]
          },
          "unit": "volt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 19,
        "y": 0
      },
      "id": 9,
      "maxDataPoints": 100,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^upsEPositiveBatteryVoltage$/",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "alias": "$col",
          "datasource": {
            "type": "influxdb",
            "uid": "ddp38pe3t92wwc"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "synoSystem",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"ups\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ups_data\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"upsEBatteryEstimatedChargeRemaining\" or r[\"_field\"] == \"upsEPositiveBatteryVoltage\" or r[\"_field\"] == \"upsESystemInputVoltage\" or r[\"_field\"] == \"upsESystemOutputLoad\" or r[\"_field\"] == \"upsESystemOutputVoltage\") \r\n  |> map(fn: (r) => ({\r\n      _time: r._time,\r\n      _value: \r\n        if r[\"_field\"] == \"upsEPositiveBatteryVoltage\" then float(v: r._value) / 10.0 \r\n        else float(v: r._value),\r\n      _field: r._field,\r\n      _measurement: r._measurement\r\n  }))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "upsBatteryCharge"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "UPS Battery Volts",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddp38pe3t92wwc"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "max": 41.2,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              },
              {
                "color": "dark-green",
                "value": 0
              },
              {
                "color": "dark-orange",
                "value": 55
              },
              {
                "color": "dark-red",
                "value": 75
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 21,
        "y": 0
      },
      "id": 21,
      "maxDataPoints": 100,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^upsESystemTemperature$/",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "alias": "$col",
          "datasource": {
            "type": "influxdb",
            "uid": "ddp38pe3t92wwc"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "synoSystem",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"ups\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ups_data\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"upsESystemTemperature\" ) \r\n  |> map(fn: (r) => ({\r\n      _time: r._time,\r\n      _value: \r\n        if r[\"_field\"] == \"upsESystemTemperature\" then float(v: r._value) / 10.0 \r\n        else float(v: r._value),\r\n      _field: r._field,\r\n      _measurement: r._measurement\r\n  }))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "upsBatteryCharge"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "UPS Temp",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddp38pe3t92wwc"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 0,
        "y": 2
      },
      "id": 12,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^upsEIdentityAgentSoftwareVerison$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddp38pe3t92wwc"
          },
          "query": "from(bucket: \"ups\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ups_data\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"upsEIdentityAgentSoftwareVerison\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Module firmware",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddp38pe3t92wwc"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "1": {
                  "color": "super-light-blue",
                  "index": 0,
                  "text": "Unknown"
                },
                "2": {
                  "color": "dark-green",
                  "index": 1,
                  "text": "Normal"
                },
                "3": {
                  "color": "orange",
                  "index": 2,
                  "text": "Low"
                },
                "4": {
                  "color": "dark-orange",
                  "index": 3,
                  "text": "Depleted"
                },
                "5": {
                  "color": "orange",
                  "index": 4,
                  "text": "Discharging"
                },
                "6": {
                  "color": "dark-red",
                  "index": 5,
                  "text": "Failure"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 8,
        "y": 2
      },
      "id": 8,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddp38pe3t92wwc"
          },
          "query": "from(bucket: \"ups\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ups_data\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"upsEBatteryStatus\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Battery Status",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddp38pe3t92wwc"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-red",
                "value": null
              },
              {
                "color": "dark-green",
                "value": 215
              },
              {
                "color": "dark-red",
                "value": 232
              }
            ]
          },
          "unit": "volt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 11,
        "y": 2
      },
      "id": 19,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^upsESystemOutputVoltage$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddp38pe3t92wwc"
          },
          "query": "from(bucket: \"ups\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ups_data\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"upsESystemOutputVoltage\") \r\n  |> map(fn: (r) => ({\r\n      _time: r._time,\r\n      _value: \r\n        if r[\"_field\"] == \"upsESystemOutputVoltage\" then float(v: r._value) / 10.0 \r\n        else float(v: r._value),\r\n      _field: r._field,\r\n      _measurement: r._measurement\r\n  }))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "A"
        }
      ],
      "title": "Output Volts",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddp38pe3t92wwc"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-green",
                "value": null
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 13,
        "y": 2
      },
      "id": 15,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^upsESecondsOnBattery$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.0.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "ddp38pe3t92wwc"
          },
          "query": "from(bucket: \"ups\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ups_data\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"upsESecondsOnBattery\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
          "refId": "A"
        }
      ],
      "title": "Time on battery",
      "type": "stat"
    },
    {
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 4,
      "panels": [],
      "repeat": "bucket",
      "repeatDirection": "h",
      "title": "Data",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "ddp38pe3t92wwc"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": true,
            "axisCenteredZero": false,
            "axisColorMode": "series",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "log": 2,
              "type": "log"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "upsEPositiveBatteryVoltage"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UPS Battery Voltage"
              },
              {
                "id": "unit",
                "value": "volt"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "upsESystemInputVoltage"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UPS Input Voltage"
              },
              {
                "id": "unit",
                "value": "volt"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "upsEBatteryEstimatedChargeRemaining"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UPS Charge Level"
              },
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "upsESystemOutputLoad"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UPS Load"
              },
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "upsESystemOutputVoltage"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "UPS Output Voltage"
              },
              {
                "id": "unit",
                "value": "volt"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 15,
        "w": 24,
        "x": 0,
        "y": 5
      },
      "id": 5,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "table",
          "placement": "right",
          "showLegend": false
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.2",
      "targets": [
        {
          "alias": "UPS Load",
          "datasource": {
            "type": "influxdb",
            "uid": "ddp38pe3t92wwc"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "previous"
              ],
              "type": "fill"
            }
          ],
          "measurement": "synoSystem",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"ups\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ups_data\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"upsEBatteryEstimatedChargeRemaining\" or r[\"_field\"] == \"upsEPositiveBatteryVoltage\" or r[\"_field\"] == \"upsESystemInputVoltage\" or r[\"_field\"] == \"upsESystemOutputLoad\" or r[\"_field\"] == \"upsESystemOutputVoltage\") \r\n  |> map(fn: (r) => ({\r\n      _time: r._time,\r\n      _value: \r\n        if r[\"_field\"] == \"upsEPositiveBatteryVoltage\" then float(v: r._value) / 10.0 \r\n        else if r[\"_field\"] == \"upsESystemInputVoltage\" then float(v: r._value) / 10.0 \r\n        else if r[\"_field\"] == \"upsESystemOutputVoltage\" then float(v: r._value) / 10.0 \r\n        else float(v: r._value),\r\n      _field: r._field,\r\n      _measurement: r._measurement\r\n  }))\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "upsLoad"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "IPPON UPS",
      "type": "timeseries"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timeRangeUpdatedDuringEditOrView": false,
  "timepicker": {},
  "timezone": "browser",
  "title": "UPS",
  "uid": "be5qevsfuwc8we",
  "version": 28,
  "weekStart": ""
}